!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("dotenv")):"function"==typeof define&&define.amd?define(["dotenv"],t):(e||self).fireblade=t(e.dotenv)}(this,function(e){function t(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(r){if("default"!==r){var n=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,n.get?n:{enumerable:!0,get:function(){return e[r]}})}}),t.default=e,t}var r,n=/*#__PURE__*/t(e);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)({}).hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(null,arguments)}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}!function(e){e.USER_EVENT="User Event",e.USER_FAILURE="User Failure",e.DATABASE_INFORMATION="Database Information",e.DATABASE_FAILURE="Database Failure",e.SYSTEM_INFORMATION="System Information",e.SYSTEM_FAILURE="System Failure",e.AUTOMATED_INFORMATION="Automated Information",e.AUTOMATED_FAILURE="Automated Failure",e.EXTERNAL_VENDOR_INFORMATION="External Vendor Information",e.EXTERNAL_VENDOR_FAILURE="External Vendor Failure"}(r||(r={}));var s=/*#__PURE__*/function(e){function t(){return e.call(this)||this}var n,s;s=e,(n=t).prototype=Object.create(s.prototype),n.prototype.constructor=n,i(n,s);var u=t.prototype;return u.userEvent=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.USER_EVENT})))}catch(e){return Promise.reject(e)}},u.userFailure=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.USER_FAILURE})))}catch(e){return Promise.reject(e)}},u.databaseInformation=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.DATABASE_INFORMATION})))}catch(e){return Promise.reject(e)}},u.databaseFailure=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.DATABASE_FAILURE})))}catch(e){return Promise.reject(e)}},u.systemInformation=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.SYSTEM_INFORMATION})))}catch(e){return Promise.reject(e)}},u.systemFailure=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.SYSTEM_FAILURE})))}catch(e){return Promise.reject(e)}},u.automatedInformation=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.AUTOMATED_INFORMATION})))}catch(e){return Promise.reject(e)}},u.automatedFailure=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.AUTOMATED_FAILURE})))}catch(e){return Promise.reject(e)}},u.externalVendorInformation=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.EXTERNAL_VENDOR_INFORMATION})))}catch(e){return Promise.reject(e)}},u.externalVendorFailure=function(e){try{return Promise.resolve(this.sendEvent(o({},e,{logType:r.EXTERNAL_VENDOR_FAILURE})))}catch(e){return Promise.reject(e)}},u.customEvent=function(e){try{return Promise.resolve(this.sendEvent(e))}catch(e){return Promise.reject(e)}},t}(/*#__PURE__*/function(){function e(){this.projectKey=void 0,this.url="https://fireblade.jensenlabs.dev/api/logs";var e=process.env.NEXT_PUBLIC_FIREBLADE_API_KEY||process.env.REACT_APP_FIREBLADE_API_KEY||process.env.FIREBLADE_API_KEY||"";if(this.projectKey=e,!this.projectKey)throw new Error("You must supply a project key for the Jensen Fireblade Client to work.")}return e.prototype.sendEvent=function(e){try{return Promise.resolve(fetch(this.url,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.projectKey},body:JSON.stringify({content:e.title,description:e.description,eventMetadata:e.eventMetadata,eventType:r.USER_EVENT,timeElapsed:e.timeElapsed,userEmailInvoker:e.userEmailInvoker,userNameInvoker:e.userNameInvoker})})).then(function(e){if(!e.ok)throw console.error(e),new Error("Failed to send event to Jensen API")})}catch(e){return Promise.reject(e)}},e}());return n.config(),/*#__PURE__*/function(){function e(){}return e.createClient=function(){return new s},e}()});
//# sourceMappingURL=index.umd.js.map
